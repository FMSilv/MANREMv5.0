/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Coalition;

import jade.core.AID;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.border.BevelBorder;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;
import selling.SellerInputGui;
import tools.TimeChooser;
import xml.XMLReader;

/**
 *
 * @author Paulo Bonifacio
 *
 */
public class CoalitionGui extends javax.swing.JFrame {

    public  CoalitionFront      coordinator;
    private DefaultListModel    CoalitionMembersList;
    private DefaultListModel    VendorList;
    private DefaultListModel    CoalitionsList;
    public String               AgentName1, ProposalName, VotingName, TeamStrategy, nRounds;
    private XMLReader           xmlr;
    private ArrayList<String>   namesA, namesProposalsA, namesProposalsB, 
                                namesVotingA, namesVotingB, namesStrategieA, namesStrategieB;
    private TriState            addBuyerSeller;
    private String              AgentType;
    private Font                font_1;
    private String              location = "images\\";
    private String              icon_agenda_location = location + "icon1.png";
    private boolean             CoalitionButtonEnable, SellerButtonEnable;
    public  boolean             InformPrices, LdCfgCoal, LdCfgSeller;
    private final JTextField[]  tf_personal_info;
    
    public CoalitionGui(CoalitionFront coor) {
        initComponents();
        CoalitionMembersList    =   new DefaultListModel();
        VendorList              =   new DefaultListModel();
        CoalitionsList          =   new DefaultListModel();
        coordinator             =   coor;
        addBuyerSeller          =   TriState.TRALSE;
        
        xmlr                    =   new XMLReader(coor.getAID().getLocalName(), "Buyers" );    //**** improve
        //xmlr                    =   new XMLReader("Buyers", this.getName());
        
        CoalitionButtonEnable   =   false;
        SellerButtonEnable      =   false;
        tf_personal_info        =   new JTextField[5];
       
        CoalList.setModel(CoalitionMembersList); 
        
        CoalList.setSelectionMode(javax.swing.DefaultListSelectionModel.SINGLE_SELECTION);
       // SellList.setModel(VendorList);
        //SellList.setSelectionMode(javax.swing.DefaultListSelectionModel.SINGLE_SELECTION);   
        TabPanel.setEnabledAt(1, false);
        TabPanel.setEnabledAt(2, false);
        read2Combobox();
    }

    public enum TriState {                                                      // Tristate for create new user button
        TRUE,                                                                       // TRUE - new buyer FALSE - new Seller TARSE - Disabled
        FALSE,
        TRALSE
    };
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AgentName = new javax.swing.JDialog();
        newAgentDialog = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        newAgentOk = new javax.swing.JButton();
        AgentComboBox = new javax.swing.JComboBox();
        TabPanel = new javax.swing.JTabbedPane();
        AgentPanel = new javax.swing.JPanel();
        CoalitionCreatePane = new javax.swing.JPanel();
        AddAgent = new javax.swing.JButton();
        RemoveAgent = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        MemberDetailsPane = new javax.swing.JScrollPane();
        CoalDetailsTextArea = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        CoalList = new javax.swing.JList();
        CoalOkButton = new javax.swing.JButton();
        NegotiationPanel = new javax.swing.JPanel();
        Setup = new javax.swing.JPanel();
        Strategie = new javax.swing.JPanel();
        TeamStrCombo = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        DecisionCombo = new javax.swing.JComboBox();
        ProposalCombo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        InfoTextArea = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        SetupCoalButton = new javax.swing.JButton();
        DeadLineButton = new javax.swing.JButton();
        ResultsPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        NegotiationTextArea = new javax.swing.JTextArea();
        Backup = new javax.swing.JPanel();
        ConfigSeller = new javax.swing.JPanel();
        LdConfigCoal = new javax.swing.JCheckBox();
        MultiStr = new javax.swing.JCheckBox();
        Rounds = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        EnergyPrice = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        ResultsTextArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Exit = new javax.swing.JMenuItem();

        AgentName.setTitle("Create Agent Dialog");
        AgentName.setBounds(new java.awt.Rectangle(450, 200, 200, 200));
        AgentName.setMinimumSize(new java.awt.Dimension(180, 170));

        newAgentDialog.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        newAgentDialog.setMinimumSize(new java.awt.Dimension(180, 170));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Available Agents ");

        newAgentOk.setText("Ok");
        newAgentOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAgentOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newAgentDialogLayout = new javax.swing.GroupLayout(newAgentDialog);
        newAgentDialog.setLayout(newAgentDialogLayout);
        newAgentDialogLayout.setHorizontalGroup(
            newAgentDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newAgentDialogLayout.createSequentialGroup()
                .addGroup(newAgentDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newAgentDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(AgentComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(newAgentDialogLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel1)
                        .addGap(0, 46, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newAgentDialogLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(newAgentOk)
                .addGap(73, 73, 73))
        );
        newAgentDialogLayout.setVerticalGroup(
            newAgentDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newAgentDialogLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(AgentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(newAgentOk)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout AgentNameLayout = new javax.swing.GroupLayout(AgentName.getContentPane());
        AgentName.getContentPane().setLayout(AgentNameLayout);
        AgentNameLayout.setHorizontalGroup(
            AgentNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newAgentDialog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        AgentNameLayout.setVerticalGroup(
            AgentNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgentNameLayout.createSequentialGroup()
                .addComponent(newAgentDialog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 30, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Coalition Gui");
        setBounds(new java.awt.Rectangle(0, 0, 468, 736));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(468, 736));
        setName("GuiFrame"); // NOI18N
        setPreferredSize(new java.awt.Dimension(468, 736));

        TabPanel.setMinimumSize(new java.awt.Dimension(460, 726));
        TabPanel.setPreferredSize(new java.awt.Dimension(460, 700));

        AgentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        CoalitionCreatePane.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        AddAgent.setText("Add");
        AddAgent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddAgentActionPerformed(evt);
            }
        });

        RemoveAgent.setText("Remove");
        RemoveAgent.setEnabled(false);
        RemoveAgent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveAgentActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Coalition Members Setup");

        CoalDetailsTextArea.setColumns(20);
        CoalDetailsTextArea.setRows(5);
        CoalDetailsTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Member Details"));
        CoalDetailsTextArea.setPreferredSize(new java.awt.Dimension(410, 220));
        MemberDetailsPane.setViewportView(CoalDetailsTextArea);

        CoalList.setBorder(javax.swing.BorderFactory.createTitledBorder("Coalition Members"));
        CoalList.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                CoalListComponentAdded(evt);
            }
        });
        CoalList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                CoalListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(CoalList);

        CoalOkButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        CoalOkButton.setText("Done");
        CoalOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoalOkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CoalitionCreatePaneLayout = new javax.swing.GroupLayout(CoalitionCreatePane);
        CoalitionCreatePane.setLayout(CoalitionCreatePaneLayout);
        CoalitionCreatePaneLayout.setHorizontalGroup(
            CoalitionCreatePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CoalitionCreatePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CoalitionCreatePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MemberDetailsPane)
                    .addGroup(CoalitionCreatePaneLayout.createSequentialGroup()
                        .addGroup(CoalitionCreatePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RemoveAgent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AddAgent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CoalOkButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40)
                        .addGroup(CoalitionCreatePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        CoalitionCreatePaneLayout.setVerticalGroup(
            CoalitionCreatePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CoalitionCreatePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGroup(CoalitionCreatePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CoalitionCreatePaneLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE))
                    .addGroup(CoalitionCreatePaneLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(AddAgent)
                        .addGap(18, 18, 18)
                        .addComponent(RemoveAgent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CoalOkButton)
                        .addGap(78, 78, 78)))
                .addComponent(MemberDetailsPane, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout AgentPanelLayout = new javax.swing.GroupLayout(AgentPanel);
        AgentPanel.setLayout(AgentPanelLayout);
        AgentPanelLayout.setHorizontalGroup(
            AgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AgentPanelLayout.createSequentialGroup()
                .addComponent(CoalitionCreatePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        AgentPanelLayout.setVerticalGroup(
            AgentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(CoalitionCreatePane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        TabPanel.addTab("Consumers", AgentPanel);
        AgentPanel.getAccessibleContext().setAccessibleName("Agent Pane");

        NegotiationPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Setup.setBorder(javax.swing.BorderFactory.createTitledBorder("Setup\n"));

        Strategie.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        TeamStrCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Team Strategy");

        DecisionCombo.setEnabled(false);

        ProposalCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ProposalCombo.setEnabled(false);

        jLabel4.setText("Desicion Protocol");

        jLabel5.setText("Proposal Selection");

        javax.swing.GroupLayout StrategieLayout = new javax.swing.GroupLayout(Strategie);
        Strategie.setLayout(StrategieLayout);
        StrategieLayout.setHorizontalGroup(
            StrategieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StrategieLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StrategieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TeamStrCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DecisionCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProposalCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(StrategieLayout.createSequentialGroup()
                        .addGroup(StrategieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        StrategieLayout.setVerticalGroup(
            StrategieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StrategieLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TeamStrCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DecisionCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(ProposalCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout SetupLayout = new javax.swing.GroupLayout(Setup);
        Setup.setLayout(SetupLayout);
        SetupLayout.setHorizontalGroup(
            SetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Strategie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        SetupLayout.setVerticalGroup(
            SetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Strategie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        InfoTextArea.setColumns(20);
        InfoTextArea.setLineWrap(true);
        InfoTextArea.setRows(5);
        InfoTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Message Log"));
        jScrollPane3.setViewportView(InfoTextArea);

        SetupCoalButton.setText("Coalition");
        SetupCoalButton.setDefaultCapable(false);
        SetupCoalButton.setEnabled(false);
        SetupCoalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetupCoalButtonActionPerformed(evt);
            }
        });

        DeadLineButton.setText("Set DeadLine");
        DeadLineButton.setEnabled(false);
        DeadLineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeadLineButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DeadLineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                .addComponent(SetupCoalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SetupCoalButton)
                    .addComponent(DeadLineButton))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout NegotiationPanelLayout = new javax.swing.GroupLayout(NegotiationPanel);
        NegotiationPanel.setLayout(NegotiationPanelLayout);
        NegotiationPanelLayout.setHorizontalGroup(
            NegotiationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NegotiationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NegotiationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Setup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(NegotiationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(NegotiationPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        NegotiationPanelLayout.setVerticalGroup(
            NegotiationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NegotiationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Setup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(326, Short.MAX_VALUE))
            .addGroup(NegotiationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NegotiationPanelLayout.createSequentialGroup()
                    .addContainerGap(340, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        TabPanel.addTab("Negotiation", NegotiationPanel);

        NegotiationTextArea.setColumns(20);
        NegotiationTextArea.setRows(5);
        NegotiationTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Negotiation Log"));
        jScrollPane5.setViewportView(NegotiationTextArea);

        javax.swing.GroupLayout ResultsPanelLayout = new javax.swing.GroupLayout(ResultsPanel);
        ResultsPanel.setLayout(ResultsPanelLayout);
        ResultsPanelLayout.setHorizontalGroup(
            ResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                .addContainerGap())
        );
        ResultsPanelLayout.setVerticalGroup(
            ResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TabPanel.addTab("Results", ResultsPanel);

        Backup.setEnabled(false);

        ConfigSeller.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ConfigSeller.setName("Coalition & Members Config"); // NOI18N

        LdConfigCoal.setText("Load Configuration From File");
        LdConfigCoal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LdConfigCoalActionPerformed(evt);
            }
        });

        MultiStr.setText("Use Multiple Team Strategies");

        Rounds.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", " " }));
        Rounds.setEnabled(false);

        jLabel7.setText("Number of Rounds (One per Strategie)");

        EnergyPrice.setText("Inform Power and Price Requirements");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Coalition ");

        javax.swing.GroupLayout ConfigSellerLayout = new javax.swing.GroupLayout(ConfigSeller);
        ConfigSeller.setLayout(ConfigSellerLayout);
        ConfigSellerLayout.setHorizontalGroup(
            ConfigSellerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConfigSellerLayout.createSequentialGroup()
                .addGroup(ConfigSellerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConfigSellerLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7))
                    .addGroup(ConfigSellerLayout.createSequentialGroup()
                        .addGroup(ConfigSellerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ConfigSellerLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(ConfigSellerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(EnergyPrice)
                                    .addComponent(MultiStr)
                                    .addComponent(LdConfigCoal)
                                    .addGroup(ConfigSellerLayout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(Rounds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(ConfigSellerLayout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(jLabel3)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ConfigSellerLayout.setVerticalGroup(
            ConfigSellerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConfigSellerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(14, 14, 14)
                .addComponent(LdConfigCoal)
                .addGap(18, 18, 18)
                .addComponent(EnergyPrice)
                .addGap(18, 18, 18)
                .addComponent(MultiStr)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(Rounds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ResultsTextArea.setColumns(20);
        ResultsTextArea.setRows(5);
        ResultsTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Results"));
        jScrollPane6.setViewportView(ResultsTextArea);

        javax.swing.GroupLayout BackupLayout = new javax.swing.GroupLayout(Backup);
        Backup.setLayout(BackupLayout);
        BackupLayout.setHorizontalGroup(
            BackupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackupLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BackupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ConfigSeller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(212, Short.MAX_VALUE))
        );
        BackupLayout.setVerticalGroup(
            BackupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackupLayout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(ConfigSeller, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(94, 94, 94)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );

        TabPanel.addTab("tab4", Backup);

        jMenu1.setText("File");

        Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK));
        Exit.setText("Exit");
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitMouseClicked(evt);
            }
        });
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        Exit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ExitKeyPressed(evt);
            }
        });
        jMenu1.add(Exit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TabPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void read2Combobox(){
        ProposalCombo.removeAllItems();
        DecisionCombo.removeAllItems();
        TeamStrCombo.removeAllItems();
        String type     =   "Voting";
        String typeI    =   "Direct Choice";
        String typeII   =   "By Element";
        String typeIII  =   "By Proposal";
        try {
            namesVotingA       =   xmlr.VotMethodsByType(type);
            namesVotingB       =   xmlr.VotMethodsByType(typeI);
            namesProposalsA    =   xmlr.ProposalsByType(typeII);
            namesProposalsB    =   xmlr.ProposalsByType(typeIII);
            namesStrategieA    =   xmlr.TeamStrategiesByType(type);
            namesStrategieB    =   xmlr.TeamStrategiesByType(typeI);
        } catch (FileNotFoundException ex) {Logger.getLogger(CoalitionGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParserConfigurationException | SAXException ex) {Logger.getLogger(CoalitionGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {Logger.getLogger(CoalitionGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        int size    =   namesVotingA.size();
        int sizeA   =   namesVotingB.size();
        int sizeB   =   namesProposalsA.size();
        int sizeC   =   namesProposalsB.size();
        int sizeD   =   namesStrategieA.size();
        int sizeE   =   namesStrategieB.size();
        
        for (int i = 0; i < size; i++){
            String get = namesVotingA.get(i);
            DecisionCombo.addItem(get);
        }
        for (int i = 0; i < sizeA; i++){
            String get = namesVotingB.get(i);
            DecisionCombo.addItem(get);
        }    
        for (int i = 0; i < sizeB; i++){
            String get = namesProposalsA.get(i);
            ProposalCombo.addItem(get);
        }
        for (int i = 0; i < sizeC; i++){
            String get = namesProposalsB.get(i);
            ProposalCombo.addItem(get);
        }        
        for (int i = 0; i < sizeD; i++){
            String get = namesStrategieA.get(i);
            TeamStrCombo.addItem(get);
        }        
        for (int i = 0; i < sizeE; i++){
            String get = namesStrategieB.get(i);
            TeamStrCombo.addItem(get);
        }        
        
        
    }
    
    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
         SwingUtilities.invokeLater(new Runnable() {
          
          @Override
          public void run() {
                //coordinator.takedown();
                System.exit(0);
            }
            
        });
               
    }//GEN-LAST:event_ExitActionPerformed
        
    private void newAgentOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAgentOkActionPerformed
        AgentName1 = AgentComboBox.getSelectedItem().toString();
        if ("".equals(AgentName1)){
            JOptionPane.showMessageDialog(AgentName, "Invalid Agent Name ");
        }else{
            AgentName1 = AgentComboBox.getSelectedItem().toString();
            switch (addBuyerSeller){
                case TRUE:
                AgentType    = "consumer.Consumer";
                SetupCoalButton.setEnabled(rootPaneCheckingEnabled);
                break;

            }
            coordinator.createAgent(AgentName1 , AgentType);
            if (AgentComboBox.getItemCount() <= 1){
                AddAgent.setEnabled(false);
            }
            AgentName.dispose();
            addBuyerSeller = TriState.TRALSE;
            
        }
    }//GEN-LAST:event_newAgentOkActionPerformed

    private void ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseClicked
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
          
          @Override
          public void run() {
               // coordinator.takedown();
                System.exit(0);
            }
            
        });
    }//GEN-LAST:event_ExitMouseClicked

    private void ExitKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ExitKeyPressed
SwingUtilities.invokeLater(new Runnable() {
          
          @Override
          public void run() {
                //coordinator.takedown();
                System.exit(0);
            }
            
        });        // TODO add your handling code here:
    }//GEN-LAST:event_ExitKeyPressed

    private void DeadLineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeadLineButtonActionPerformed

        if (ProposalCombo.isEnabled()){
            ProposalName = ProposalCombo.getSelectedItem().toString();
            ProposalCombo.setEnabled(false);
        }
        if (DecisionCombo.isEnabled()){
            VotingName = DecisionCombo.getSelectedItem().toString();
            DecisionCombo.setEnabled(false);
        }
        if(TeamStrCombo.isEnabled()){
            TeamStrategy = TeamStrCombo.getSelectedItem().toString();
            TeamStrCombo.setEnabled(false);
        }
        if (LdConfigCoal.isSelected()){
            LdCfgCoal        =   true;
            LdConfigCoal.setEnabled(false);
        }else{
            LdCfgCoal       =   false;
        }
        if (EnergyPrice.isSelected()){
            InformPrices    =   true;
            EnergyPrice.setEnabled(false);
        }else{
            InformPrices    =   false;
        }
        if( MultiStr.isSelected()){
            nRounds = Rounds.getSelectedItem().toString();
            MultiStr.setEnabled(false);
        }
        //*****must be improved for safety***
        String desiredDate = askDeadline(this, null);
        coordinator.stateMachine(2, desiredDate);
    }//GEN-LAST:event_DeadLineButtonActionPerformed

    private void SetupCoalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetupCoalButtonActionPerformed

        if(TeamStrCombo.isEnabled()){
            TeamStrategy = TeamStrCombo.getSelectedItem().toString();
            TeamStrCombo.setEnabled(false);
        }

        coordinator.stateMachine(1, null);
        CoalitionButtonEnable   =   true;

        /*if(SetupSellButton.isEnabled() && SellerButtonEnable){
            * DeadLineButton.setEnabled(rootPaneCheckingEnabled);
            * }*/
        TabPanel.setEnabledAt(2, true);
        TabPanel.setSelectedIndex(2);
        TabPanel.setEnabledAt(0, false);
        //TabPanel.setEnabledAt(1, false);
    }//GEN-LAST:event_SetupCoalButtonActionPerformed

    private void LdConfigCoalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LdConfigCoalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LdConfigCoalActionPerformed

    private void CoalListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_CoalListValueChanged

        if(! evt.getValueIsAdjusting()){       // used to avoid 2 mouse events press/depress button
            SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    if (CoalList.getSelectedValue() != null){
                        CoalDetailsTextArea.setText("");
                        CoalDetailsTextArea.repaint();
                        AID CoalMember      = new AID((String) CoalList.getSelectedValue(), AID.ISLOCALNAME);
                        String localName    = CoalMember.getLocalName();
                        CoalDetailsTextArea.append("\nAgent Info : "+ localName +"\n");
                        CoalDetailsTextArea.append("Name: "         + coordinator.searchBelief(localName,"name").split(";")[1].split("_")[1]       + "\n");
                        CoalDetailsTextArea.append("Address: "      + coordinator.searchBelief(localName,"address").split(";")[1].split("_")[1]    + "\n");
                        CoalDetailsTextArea.append("Telephone: "    + coordinator.searchBelief(localName,"telephone").split(";")[1].split("_")[1]  + "\n");
                        CoalDetailsTextArea.append("Fax: "          + coordinator.searchBelief(localName,"fax").split(";")[1].split("_")[1]        + "\n");
                        CoalDetailsTextArea.append("E-mail: "       + coordinator.searchBelief(localName,"email").split(";")[1].split("_")[1]      + "\n");
                    }else{
                        CoalDetailsTextArea.setText("");
                        CoalDetailsTextArea.repaint();
                    }
                }
            });
        }
    }//GEN-LAST:event_CoalListValueChanged

    private void CoalListComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_CoalListComponentAdded
        CoalitionMembersList.setElementAt(evt, 0);        // TODO add your handling code here:
    }//GEN-LAST:event_CoalListComponentAdded

    private void RemoveAgentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveAgentActionPerformed

        //throw new UnsupportedOperationException("Not supported yet.");
        //JOptionPane.showMessageDialog(AgentName, evt, "Not Supported Yet", JOptionPane.INFORMATION_MESSAGE);
        //JOptionPane.showMessageDialog(AgentName, "Not Supported Yet", "Not Supported Yet", JOptionPane.INFORMATION_MESSAGE);
        AgentType    = "buying.Buyer";
        if (CoalList.getSelectedValue() != null){
            AID        destroyAgent    =   new AID((String) CoalList.getSelectedValue(), AID.ISLOCALNAME);
            String     lName           =   destroyAgent.getLocalName();
            coordinator.killAgent(lName, AgentType);
            if (CoalitionMembersList.contains(lName)){
                AgentComboBox.addItem(lName);
                int idex1  =   CoalitionMembersList.indexOf(lName);
                CoalitionMembersList.remove(idex1);
            }
        }else{
            JOptionPane.showMessageDialog(AgentName, "Select Agent to be Removed", "Invalid Selection", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_RemoveAgentActionPerformed

    private void AddAgentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddAgentActionPerformed

        AgentComboBox.removeAllItems();
        addBuyerSeller = TriState.TRUE;
        String type = "Buyer";
        try {
            namesA = xmlr.AgentNameByType(type);

        } catch (FileNotFoundException ex) {
            Logger.getLogger(CoalitionGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParserConfigurationException | SAXException ex) {
            Logger.getLogger(CoalitionGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(CoalitionGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        int size = namesA.size();
        for (int i = 0; i < size ; i++){
            String get = namesA.get(i);
            if (CoalitionMembersList.contains(get)){
            } else{ AgentComboBox.addItem(get);}
        }
        AgentName.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_AddAgentActionPerformed

    private void CoalOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoalOkButtonActionPerformed
        // TODO add your handling code here:
        TabPanel.setEnabledAt(1, true);
        TabPanel.setSelectedIndex(1);
    }//GEN-LAST:event_CoalOkButtonActionPerformed

    void addAgent(String AgentName, String AgentType) {
        switch (AgentType) {
            case "buyer":
                CoalitionMembersList.addElement(AgentName);
                RemoveAgent.setEnabled(rootPaneCheckingEnabled);
                break;
            case "seller":
                VendorList.addElement(AgentName);
               // if (SellList.getSelectedIndex() == -1){
               //     SellList.setSelectedIndex(0);
               // }
                    
                break;
        }
        InfoTextArea.append(AgentName + " as connected\n");
        //PingButton.setEnabled(rootPaneCheckingEnabled);
    }
     
    void addInfoToTextArea(final String data){
        Runnable addText = new Runnable(){
        
            @Override
            public void run(){
                InfoTextArea.append(data + "\n");
            }
           
        };
     SwingUtilities.invokeLater(addText); 
    }
    // </editor-fold> 
    
    void addInfoToNegotiation(final String Data){
       Runnable addNego = new Runnable() {

           @Override
           public void run() {
               NegotiationTextArea.append( Data + "\n");
           }
       };
       SwingUtilities.invokeLater(addNego);                
        
    }
    
    void changeTab(final int tab){
        Runnable addNego = new Runnable() {

           @Override
           public void run() {
               TabPanel.setSelectedIndex(tab);
           }
       };
       SwingUtilities.invokeLater(addNego);                
        
    }
    
    //****************************************************************************** Date Set Function from BuyerInputGui
    
    public String askDeadline(CoalitionGui parent, String proposal) {

        Date date_proposed = new Date();
        if (proposal != null) {
            date_proposed.setTime(Long.valueOf(proposal));
        } else {
            date_proposed.setTime(System.currentTimeMillis());
        }

        JPanel panel = new JPanel(new BorderLayout());

        //Panel north
        JPanel panel_north = new JPanel();

        panel_north.setLayout(new BorderLayout());
        panel_north.setMinimumSize(new Dimension(400, 70));
        panel_north.setPreferredSize(new Dimension(400, 70));
        panel_north.setBorder(new BevelBorder(BevelBorder.LOWERED));

        JPanel panel_text_background = new JPanel();
        JLabel label_text = new JLabel();
        panel_text_background.setMinimumSize(new Dimension(345, 60));
        panel_text_background.setPreferredSize(new Dimension(345, 60));
        label_text.setMinimumSize(new Dimension(345, 60));
        label_text.setPreferredSize(new Dimension(345, 60));
        label_text.setHorizontalAlignment(SwingConstants.CENTER);
        if (proposal != null) {
            label_text.setText("<html>Opponent deadline proposal:<br>" + date_proposed.toString() + "</html>");
        } else {
            label_text.setText("<html>Enter inital deadline proposal</html>");
        }
        label_text.setFont(font_1);
        panel_text_background.add(label_text);
        panel_north.add(panel_text_background, BorderLayout.CENTER);


        try {
            BufferedImage picture = ImageIO.read(new File(icon_agenda_location));
            JPanel panel_pic_background = new JPanel();
            JLabel label_pic = new JLabel(new ImageIcon(picture));
            panel_pic_background.setMinimumSize(new Dimension(55, 55));
            panel_pic_background.setPreferredSize(new Dimension(55, 55));
            panel_pic_background.add(label_pic);
            panel_north.add(panel_pic_background, BorderLayout.EAST);
        } catch (IOException ex) {
            Logger.getLogger(CoalitionGui.class.getName()).log(Level.SEVERE, null, ex);
        }
//        
        panel.add(panel_north, BorderLayout.NORTH);

        if (proposal != null) {
            String[] choices = {"Accept", "Propose"};
            int result = JOptionPane.showOptionDialog(parent, panel, "Deadline", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, choices, null);
            if (result == 1) {
                TimeChooser tc = new TimeChooser(date_proposed);
                int result_date = tc.showEditTimeDlg(parent);
                while (result_date == 1) {
                    tc = new TimeChooser(date_proposed);
                    result_date = tc.showEditTimeDlg(parent);
                }
                if (result_date == 0) {
                    return String.valueOf(tc.getDate().getTime());}
            } else if (result == 0) {
                return proposal;}
        } else {
            String[] choices = {"Propose"};
            int result = JOptionPane.showOptionDialog(parent, panel, "Deadline", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, choices, null);
            if (result == 0) {
                TimeChooser tc = new TimeChooser(date_proposed);
                int result_date = tc.showEditTimeDlg(parent);
                while (result_date == 1) {
                    tc = new TimeChooser(date_proposed);
                    result_date = tc.showEditTimeDlg(parent);
                }
                if (result_date == 0) {
                    return String.valueOf(tc.getDate().getTime());}
            }
            }

        return null;
    }
    
    //******************************************************************************
    
    public boolean checkEmptyFields(JTextField[] text_fields) {
        for (int i = 0; i < text_fields.length; i++) {
            if (text_fields[i].getText().isEmpty()) {
                return true;
            }
        }
        return false;
    }
    
    public void askPersonalInfo() {

       ArrayList<String> initial_values     =   new ArrayList();
       String   str =   coordinator.getLocalName();
       /*       int j    =   0;
        * for(int i = 0 ; i < seller_list.length;i++){
        * if(str.equals(seller_list[i])){
        * j=i;
        * i=seller_list.length;
        * }
        * }*/
        //initial_values.add(seller_list[j].replace("_", " "));
        initial_values.add("Agente de Coligação");
        initial_values.add("Agente Virtual");
        initial_values.add("555555555");
        initial_values.add("444444444");
        //initial_values.add(seller_list[j].replace("_", "")+"@seller.com");
        initial_values.add("coalition"+"@coal.com");

        JPanel panel = new JPanel(new BorderLayout());

        // <editor-fold defaultstate="collapsed" desc="Panel north">

        JPanel panel_north = new JPanel();

        panel_north.setLayout(new BorderLayout());
        panel_north.setMinimumSize(new Dimension(400, 65));
        panel_north.setPreferredSize(new Dimension(400, 65));
        panel_north.setBorder(new BevelBorder(BevelBorder.LOWERED));

        JPanel panel_text_background = new JPanel();
        JLabel label_text = new JLabel();
        panel_text_background.setMinimumSize(new Dimension(345, 60));
        panel_text_background.setPreferredSize(new Dimension(345, 60));
        label_text.setMinimumSize(new Dimension(345, 60));
        label_text.setPreferredSize(new Dimension(345, 60));
        label_text.setHorizontalAlignment(SwingConstants.CENTER);
        label_text.setText("<html>Please enter the seller's information</html>");
        label_text.setFont(font_1);
        panel_text_background.add(label_text);
        panel_north.add(panel_text_background, BorderLayout.CENTER);

        try {
            BufferedImage picture = ImageIO.read(new File(icon_agenda_location));
            JPanel panel_pic_background = new JPanel();
            JLabel label_pic = new JLabel(new ImageIcon(picture));
            panel_pic_background.setMinimumSize(new Dimension(55, 55));
            panel_pic_background.setPreferredSize(new Dimension(55, 55));
            panel_pic_background.add(label_pic);
            panel_north.add(panel_pic_background, BorderLayout.EAST);
        } catch (IOException ex) {
            Logger.getLogger(SellerInputGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        // <editor-fold defaultstate="collapsed" desc="Panel center">
        //</editor-fold>
        
        // <editor-fold defaultstate="collapsed" desc="Panel center">
        //</editor-fold>
        
        // <editor-fold defaultstate="collapsed" desc="Panel center">
        //</editor-fold>
        
        // <editor-fold defaultstate="collapsed" desc="Panel center">
        

        JPanel panel_center = new JPanel();

        panel_center.setLayout(new GridBagLayout());
        panel_center.setMinimumSize(new Dimension(400, 300));
        panel_center.setPreferredSize(new Dimension(400, 300));

        // Label names
        JLabel l = new JLabel("Name");
        l.setFont(font_1);
        l.setHorizontalAlignment(SwingConstants.LEFT);
        GridBagConstraints gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 10, 30);
        panel_center.add(l, gridBagConstraints);


        l = new JLabel("Address");
        l.setFont(font_1);
        l.setHorizontalAlignment(SwingConstants.LEFT);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 10, 30);
        panel_center.add(l, gridBagConstraints);

        l = new JLabel("Telephone");
        l.setFont(font_1);
        l.setHorizontalAlignment(SwingConstants.LEFT);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 10, 30);
        panel_center.add(l, gridBagConstraints);

        l = new JLabel("Fax");
        l.setFont(font_1);
        l.setHorizontalAlignment(SwingConstants.LEFT);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 10, 30);
        panel_center.add(l, gridBagConstraints);

        l = new JLabel("E-mail");
        l.setFont(font_1);
        l.setHorizontalAlignment(SwingConstants.LEFT);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 5, 10, 30);
        panel_center.add(l, gridBagConstraints);

        //</editor-fold>
        
        //Label textfields

        for (int i = 0; i < 5; i++) {

            tf_personal_info[i] = new JTextField(64);
            tf_personal_info[i].setText(initial_values.get(i));
            tf_personal_info[i].setMinimumSize(new Dimension(230, 25));
            tf_personal_info[i].setPreferredSize(new Dimension(230, 25));
            gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridx = 1;
            gridBagConstraints.gridy = i;
            gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
            gridBagConstraints.insets = new Insets(12, 5, 5, 5);
            panel_center.add(tf_personal_info[i], gridBagConstraints);
        }

        panel_center.setBorder(new BevelBorder(BevelBorder.LOWERED));

        panel.add(panel_north, BorderLayout.NORTH);
        panel.add(panel_center, BorderLayout.CENTER);

        int result = JOptionPane.showOptionDialog(null, panel, "Personal Info", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, null, null);

        while (result != -1 && (checkEmptyFields(tf_personal_info))) {

            JOptionPane.showMessageDialog(null, new JLabel("<html>Some inputs are missing</html>"), "Personal Info", JOptionPane.ERROR_MESSAGE);
            result = JOptionPane.showOptionDialog(null, panel, "Personal Info", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, null, null);
        }

        if (result == 0) {
            ArrayList<String> personal_info = new ArrayList<>();

            for (int i = 0; i < 5; i++) {
                personal_info.add(tf_personal_info[i].getText());
            }

            coordinator.setPersonalInfo(personal_info);
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CoalitionGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CoalitionGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CoalitionGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CoalitionGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new CoalitionGui().setVisible(true);
            }
        });
    }
    
    // <editor-fold defaultstate="collapsed" desc="Variables Declaration">  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddAgent;
    private javax.swing.JComboBox AgentComboBox;
    private javax.swing.JDialog AgentName;
    private javax.swing.JPanel AgentPanel;
    private javax.swing.JPanel Backup;
    private javax.swing.JTextArea CoalDetailsTextArea;
    private javax.swing.JList CoalList;
    private javax.swing.JButton CoalOkButton;
    private javax.swing.JPanel CoalitionCreatePane;
    private javax.swing.JPanel ConfigSeller;
    private javax.swing.JButton DeadLineButton;
    private javax.swing.JComboBox DecisionCombo;
    private javax.swing.JCheckBox EnergyPrice;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JTextArea InfoTextArea;
    private javax.swing.JCheckBox LdConfigCoal;
    private javax.swing.JScrollPane MemberDetailsPane;
    private javax.swing.JCheckBox MultiStr;
    private javax.swing.JPanel NegotiationPanel;
    private javax.swing.JTextArea NegotiationTextArea;
    private javax.swing.JComboBox ProposalCombo;
    private javax.swing.JButton RemoveAgent;
    private javax.swing.JPanel ResultsPanel;
    private javax.swing.JTextArea ResultsTextArea;
    private javax.swing.JComboBox Rounds;
    private javax.swing.JPanel Setup;
    private javax.swing.JButton SetupCoalButton;
    private javax.swing.JPanel Strategie;
    private javax.swing.JTabbedPane TabPanel;
    private javax.swing.JComboBox TeamStrCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPanel newAgentDialog;
    private javax.swing.JButton newAgentOk;
    // End of variables declaration//GEN-END:variables
  // </editor-fold> 
}
