/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package market.panel;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.text.DecimalFormat;
import javax.swing.JSpinner;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import personalassistant.PersonalAssistant;

/**
 *
 * @author Hugo
 */
public class risk_seller extends javax.swing.JPanel {

    public PersonalAssistant mark;
    /**
     * Creates new form risk
     */
    public risk_seller(PersonalAssistant market) {
        mark=market;
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jTseller = new javax.swing.JTextField();
//        SpinnerModel sm = new SpinnerNumberModel(0.0, 0.0, 1.0, 0.1);
//        jSpinner1 = new javax.swing.JSpinner(sm);
        
        Listener listener = new Listener();

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Agent:");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Please enter the seller's Risk Preference");

        jCheckBox5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox5.setText("Risk-Averse");
        jCheckBox5.addItemListener(listener);
        
      

        jCheckBox6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox6.setText("Risk-Neutral");
        jCheckBox6.setSelected(true);
        jCheckBox6.addItemListener(listener);

        jCheckBox7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBox7.setText("Risk-Seeking");
        jCheckBox7.addItemListener(listener);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Risk Exposure:");

//        jSpinner1.setRequestFocusEnabled(false);
//          jSpinner1.addChangeListener(new ChangeListener() {
//
//        @Override
//        public void stateChanged(ChangeEvent e) {
//            mark.seller_risk_exposure=(double)jSpinner1.getValue();
//        }
//    });
//        JSpinner.NumberEditor editor = (JSpinner.NumberEditor)jSpinner1.getEditor();  
//        DecimalFormat format = editor.getFormat();  
//        format.setMinimumFractionDigits(1);  
//        editor.getTextField().setHorizontalAlignment(SwingConstants.CENTER);  
//        Dimension d = jSpinner1.getPreferredSize();  
//        d.width = 40;  
//        jSpinner1.setPreferredSize(d); 
//        jSpinner1.setMinimumSize(new Dimension(20, 20));

        
                jTseller.setText("0,0");
        jTseller.addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            
            mark.buyer_risk_exposure=Double.valueOf(jTseller.getText());
        
           }});
        
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTseller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox6)
                            .addComponent(jCheckBox5)
                            .addComponent(jCheckBox7))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addGap(24, 24, 24)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jCheckBox5)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox6)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox7)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTseller, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>

     private class Listener implements ItemListener {
public void itemStateChanged(ItemEvent e) {
  
    Object source = e.getItemSelectable();

    if (source == jCheckBox5 && e.getStateChange() != ItemEvent.DESELECTED) {
        mark.seller_risk=1;
//        seller.setDemandResponse(demandresponse);
        if(jCheckBox6.isSelected()){
         jCheckBox6.setSelected(false);
        }
        if(jCheckBox7.isSelected()){
         jCheckBox7.setSelected(false);
        }
//         chinButton.setSelected(true);
    }
     if (source == jCheckBox5 && e.getStateChange() == ItemEvent.DESELECTED) {
            
//            seller.setDemandResponse(demandresponse);
            if(jCheckBox6.isSelected()){
         mark.seller_risk=0;
        }
               if(jCheckBox7.isSelected()){
         mark.seller_risk=2;
        }
             if(!jCheckBox6.isSelected()&&!jCheckBox7.isSelected()){
                 jCheckBox5.setSelected(true);
             }
               
               
//             chinButton.setSelected(false);
        }
         if (source == jCheckBox6 && e.getStateChange() != ItemEvent.DESELECTED) {
        mark.seller_risk=0;
//        seller.setDemandResponse(demandresponse);
        if(jCheckBox5.isSelected()){
         jCheckBox5.setSelected(false);
        }
        if(jCheckBox7.isSelected()){
         jCheckBox7.setSelected(false);
        }
    
    }
     if (source == jCheckBox6 && e.getStateChange() == ItemEvent.DESELECTED) {
            
//            seller.setDemandResponse(demandresponse);
            if(jCheckBox5.isSelected()){
         mark.seller_risk=1;
        }
               if(jCheckBox7.isSelected()){
         mark.seller_risk=2;
        }
               if(!jCheckBox5.isSelected()&&!jCheckBox7.isSelected()){
                 jCheckBox6.setSelected(true);
             }
//             chinButton.setSelected(false);
        }
              if (source == jCheckBox7 && e.getStateChange() != ItemEvent.DESELECTED) {
        mark.seller_risk=2;
//        seller.setDemandResponse(demandresponse);
        if(jCheckBox5.isSelected()){
         jCheckBox5.setSelected(false);
        }
        if(jCheckBox6.isSelected()){
         jCheckBox6.setSelected(false);
        }
    
    }
     if (source == jCheckBox7 && e.getStateChange() == ItemEvent.DESELECTED) {
            
//            seller.setDemandResponse(demandresponse);
            if(jCheckBox5.isSelected()){
        mark.seller_risk=1;
        }
               if(jCheckBox6.isSelected()){
         mark.seller_risk=0;
        }
               if(!jCheckBox6.isSelected()&&!jCheckBox5.isSelected()){
                 jCheckBox7.setSelected(true);
             }
//             chinButton.setSelected(false);
        }
     
}
}
//     private class Listener2 implements ChangeListener {
//public void StateChanged(ChangeEvent e) {
//  
//    Object source = e.getSource();
//    
//    if (source == JSpinner1 && e.getStateChange() != ItemEvent.DESELECTED) {
//    
//}
//}
//     }
    // Variables declaration - do not modify
    public javax.swing.JCheckBox jCheckBox5;
    public javax.swing.JCheckBox jCheckBox6;
    public javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
//    public javax.swing.JSpinner jSpinner1;
    public javax.swing.JTextField jTseller;
    // End of variables declaration
}
