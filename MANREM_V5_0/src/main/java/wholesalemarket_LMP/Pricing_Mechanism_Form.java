/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package wholesalemarket_LMP;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import personalassistant.PersonalAssistantGUI;
import static wholesalemarket_LMP.Wholesale_InputData.editHour;
import wholesalemarket_LMP.simul.*;
import wholesalemarket_SMP.SMP_Market_Controller;

/**
 *
 * @author admin
 */

public class Pricing_Mechanism_Form extends javax.swing.JFrame {
    
    private Wholesale_InputData lmpMode;
    private SMP_Market_Controller smpMode;

    private GridGlobalParameters frame_GRID;
    private BranchesInputParameters frame_GRID_Branches;
    private PersonalAssistantGUI marketWindow;
    
    private int numberofbranches;
    
    private int start;
    private int end;
    
    /**
     * Creates new form Pricing_Mechanism_Form
     */
    
    public Pricing_Mechanism_Form(PersonalAssistantGUI _market, Wholesale_InputData _lmpMode, SMP_Market_Controller _smpMode) {
        lmpMode = _lmpMode;
        smpMode = _smpMode;
        marketWindow = _market;
        
        start = 0;
        end = 23;
        
        initComponents();
        defineWindow();
        initJFrames();
        
        this.getRootPane().setDefaultButton(jButton_Save);
        
        jCheckBox_SMP.setSelected(true);
        jButton_Save.setEnabled(true);
        jButton_Next.setEnabled(false);
        jCheckBox_LMP.setSelected(false);

        jCheckBox_SMP.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {//checkbox has been selected
                    jButton_Save.setEnabled(true);
                    jButton_Next.setEnabled(false);
                    jCheckBox_LMP.setSelected(false);
                }
            }
        });

        jCheckBox_LMP.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {//checkbox has been selected
                    jButton_Save.setEnabled(false);
                    jButton_Next.setEnabled(true);
                    jCheckBox_SMP.setSelected(false);
                }
            }
        });
    }

    private void defineWindow() {
        this.setTitle("Pricing Mechanism");
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setAlwaysOnTop(true);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        jComboBox_EndHour.removeAllItems();
        jComboBox_EndHour.addItem("24");
        jComboBox_EndHour.setEnabled(false);
    }

    public void editWindow_options(boolean _isDayAhead) {
        jComboBox_StartHour.removeAllItems();
        if (_isDayAhead) {
            jComboBox_StartHour.addItem("00");
            jComboBox_StartHour.setEnabled(false);
            jPanel_Hour.setVisible(false);
            this.setSize(400, 240);
        } else {
            jPanel_Hour.setVisible(true);
            this.setSize(400, 300);
            for (int i = 0; i < WholesaleMarket.HOUR_PER_DAY; i++) {
                jComboBox_StartHour.addItem(i);
            }
            jComboBox_StartHour.setEnabled(true);
        }
    }

    public final void initJFrames() {
        frame_GRID = new GridGlobalParameters(lmpMode, this);
        frame_GRID.setVisible(false);

        frame_GRID_Branches = new BranchesInputParameters(lmpMode, this);
        frame_GRID_Branches.setVisible(false);
    }

    public void activeFrame_GRID(boolean _changeHour) {
        editHour = _changeHour;
        frame_GRID.setVisible(true);
    }

    public void activeFrame_BRANCHES() {
        frame_GRID_Branches.startBranchFrame();
        frame_GRID_Branches.setVisible(true);
    }
    
    public void setMarketType(boolean _isPool, boolean _isLMP) {
        marketWindow.setMarketOptionsAvailable(_isPool, _isLMP, true);
    }
    
    private String verifData() {
        String warning = "";
        start = Integer.parseInt(jComboBox_StartHour.getSelectedItem().toString());
        if(start >= end) {
            warning += "Start Hour ("+start+"h) must be lower than End Hour ("+end+"h)!";
        }
        return warning;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton_Cancel = new javax.swing.JButton();
        jButton_Save = new javax.swing.JButton();
        jButton_Next = new javax.swing.JButton();
        jPanel_PriceMechanism = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox_SMP = new javax.swing.JCheckBox();
        jCheckBox_LMP = new javax.swing.JCheckBox();
        jPanel_Hour = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox_StartHour = new javax.swing.JComboBox();
        jComboBox_EndHour = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton_Cancel.setText("Cancel");
        jButton_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CancelActionPerformed(evt);
            }
        });

        jButton_Save.setText("Save");
        jButton_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SaveActionPerformed(evt);
            }
        });

        jButton_Next.setText("Next");
        jButton_Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_NextActionPerformed(evt);
            }
        });

        jPanel_PriceMechanism.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Pricing Mechanism:");

        jCheckBox_SMP.setText("System Marginal Pricing (SMP)");
        jCheckBox_SMP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_SMPActionPerformed(evt);
            }
        });

        jCheckBox_LMP.setText("Locational Marginal Pricing (LMP)");

        javax.swing.GroupLayout jPanel_PriceMechanismLayout = new javax.swing.GroupLayout(jPanel_PriceMechanism);
        jPanel_PriceMechanism.setLayout(jPanel_PriceMechanismLayout);
        jPanel_PriceMechanismLayout.setHorizontalGroup(
            jPanel_PriceMechanismLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_PriceMechanismLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_PriceMechanismLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_PriceMechanismLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCheckBox_SMP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCheckBox_LMP, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel_PriceMechanismLayout.setVerticalGroup(
            jPanel_PriceMechanismLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_PriceMechanismLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jCheckBox_SMP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox_LMP)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jPanel_Hour.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setText("From Hour:");

        jLabel3.setText("To Hour:");

        jComboBox_StartHour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_StartHour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_StartHourActionPerformed(evt);
            }
        });

        jComboBox_EndHour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel_HourLayout = new javax.swing.GroupLayout(jPanel_Hour);
        jPanel_Hour.setLayout(jPanel_HourLayout);
        jPanel_HourLayout.setHorizontalGroup(
            jPanel_HourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_HourLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jComboBox_StartHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jComboBox_EndHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel_HourLayout.setVerticalGroup(
            jPanel_HourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_HourLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_HourLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox_StartHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_EndHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_PriceMechanism, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel_Hour, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton_Next, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_Save, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_Hour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel_PriceMechanism, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_Cancel)
                    .addComponent(jButton_Save)
                    .addComponent(jButton_Next))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton_CancelActionPerformed

    private void jButton_NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_NextActionPerformed
        // TODO add your handling code here:´
        if(verifData().isEmpty()) {
            SMP_Market_Controller.START_HOUR = start;
            SMP_Market_Controller.END_HOUR = end;
            WholesaleMarket.START_HOUR = start;
            WholesaleMarket.END_HOUR = end;
            WholesaleMarket.HOUR_PER_DAY = end - start + 1;
            this.activeFrame_GRID(false);
        }
        this.dispose();
    }//GEN-LAST:event_jButton_NextActionPerformed

    private void jButton_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SaveActionPerformed
        // TODO add your handling code here:
        if(verifData().isEmpty()) {
            SMP_Market_Controller.START_HOUR = start;
            SMP_Market_Controller.END_HOUR = end;
            WholesaleMarket.START_HOUR = start;
            WholesaleMarket.END_HOUR = end;
            WholesaleMarket.HOUR_PER_DAY = end - start + 1;
            setMarketType(true, false);
            
            
        }
        
        if(jCheckBox_SMP.isSelected()){
            marketWindow.isSMP = true;
        } else {
            marketWindow.isSMP = false;
        }
        
        marketWindow.InformMarketSelection(true, jCheckBox_SMP.isSelected(), false);
        this.dispose();
    }//GEN-LAST:event_jButton_SaveActionPerformed

    private void jCheckBox_SMPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_SMPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_SMPActionPerformed

    private void jComboBox_StartHourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_StartHourActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_StartHourActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Cancel;
    private javax.swing.JButton jButton_Next;
    private javax.swing.JButton jButton_Save;
    private javax.swing.JCheckBox jCheckBox_LMP;
    private javax.swing.JCheckBox jCheckBox_SMP;
    private javax.swing.JComboBox jComboBox_EndHour;
    private javax.swing.JComboBox jComboBox_StartHour;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel_Hour;
    private javax.swing.JPanel jPanel_PriceMechanism;
    // End of variables declaration//GEN-END:variables
}
